import KazelList from"./KazelList.js";export const kazel=(e,...t)=>{let r,a,o={useKazelList:!0,returnReducedValues:!0,isConfig:!0,expect:!1},n=[];const s=new Proxy(function(e,...t){if(void 0===e)return o.expect?a:r&&r.length>0?o.useKazelList?new KazelList(o,...r):r:null;{let l=[];if(Array.isArray(e)){let i="";return e.forEach((e,r)=>{const a=t[r]||"";if(a){const t=`${Math.floor(Math.random()*Math.floor(Math.random()*(Date.now()/1e4))).toString(36)}${Math.floor(1e4*Math.random()).toString(27)}`.repeat(Math.floor(Math.random()*Date.now()/1e12+1));a.dataset[t]=!0,i+=`${e}[data-${t}]`,l.push(()=>a.removeAttribute(`data-${t}`))}else i+=e}),o.expect?(n.push({strings:e,values:t}),a||(a=new Promise((e,t)=>{r.forEach(t=>{const r=new MutationObserver(t=>{let r=kazel;n.forEach(({strings:e,values:t})=>{r=r(e,...t)}),r()&&e(t.pop().target)});return r.observe(t,{subtree:!0,childList:!0,attributes:!0,characterData:!0}),r})}))):r=r?Array.prototype.concat(...r.map(e=>e&&[...e.querySelectorAll(i)])):[...document.querySelectorAll(i)],l.forEach(e=>e()),s}if("function"==typeof e)return"function"==typeof(r=e.length?e(o,...r):e(...r))?r:r?!r.ready&&r.length?s:r:null;if(e instanceof HTMLElement)return r=[e,...t.every(e=>e instanceof HTMLElement)?t:[]],s}},{get:(e,t)=>new KazelList(o,...r)[t],set:(e,t,a)=>new KazelList(o,...r)[t]=a});return Array.isArray(e)||e instanceof HTMLElement?s(e,...t):e?(o={...o,...e,isConfig:!0},s):void 0};export{KazelList};export*from"./kazel-filters.js";