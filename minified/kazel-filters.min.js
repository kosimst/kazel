import{kazel,KazelList}from"./kazel.js";export const siblings=(...t)=>new KazelList(...Array.prototype.concat(...t.map(t=>[...[...t.parentNode.children].filter(e=>e!==t)])));export const children=(t,...e)=>new KazelList(t,...Array.prototype.concat(...e.map(t=>[...t.children])));export const deep=(t,...e)=>new KazelList(t,...e.map(t=>t.shadowRoot));export const parent=(t,...e)=>new KazelList(t,...e.map(t=>t.parentNode));export const all=(t,...e)=>new KazelList({...t,ready:!0},...e);export const first=(...t)=>t.shift();export const last=(...t)=>t.pop();export const matches=(...t)=>!!t.shift();export const expect=(t,...e)=>kazel({...t,expect:!0})(...e);